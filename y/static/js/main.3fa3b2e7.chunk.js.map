{"version":3,"sources":["components/images/yoshilogo.png","components/images/logo-yoshi.png","config/fbConfig.js","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","firestore","db","connect","dispatch","signOut","getState","auth","then","logout","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","links","uid","id","src","Logo","alt","width","height","Notifications","notifications","map","item","key","user","content","moment","time","toDate","fromNow","ProjectSummary","project","bg","title","toUpperCase","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","doc","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstname","lastname","signUp","newUser","createUserWithEmailAndPassword","response","set","CreateProject","createProject","history","push","required","name","minLength","maxLength","getFirebase","getFirestore","authorID","add","authorId","Date","App","exact","path","component","ProjectDetails","initState","authReducer","action","console","log","message","alert","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","middleware","thunk","withExtraArgument","store","createStore","applyMiddleware","reduxFirestore","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3fa3b2e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/yoshilogo.f4c7edd4.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-yoshi.3005af21.png\";","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/analytics'\r\nimport 'firebase/auth'\r\n\r\nexport const fbConfig = {\r\n    apiKey: \"AIzaSyACk9e3GBHzSJ3JjJh_MTqh7ks4hrJmC6s\",\r\n    authDomain: \"yoshiland-a21d9.firebaseapp.com\",\r\n    databaseURL: \"https://yoshiland-a21d9.firebaseio.com\",\r\n    projectId: \"yoshiland-a21d9\",\r\n    storageBucket: \"yoshiland-a21d9.appspot.com\",\r\n    messagingSenderId: \"764763908175\",\r\n    appId: \"1:764763908175:web:f2d64b859dd0df6850223a\",\r\n    measurementId: \"G-Z3W1DNCJQ9\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(fbConfig);\r\n  firebase.analytics();\r\n  firebase.firestore();\r\n\r\n  const db = firebase.firestore();\r\n  export { db };\r\n  export default firebase;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log out</a></li>\r\n            <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","import firebase, { db } from '../../config/fbConfig';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nexport const signIn = (credentials) => {\r\n  return ( dispatch, getState) => {\r\n    \r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({ type: 'LOGIN_SUCCESS'})\r\n    }).catch(err => {\r\n      dispatch({ type: 'LOGIN_ERROR', err})\r\n    })\r\n\r\n  }\r\n}   \r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState) =>{\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      firebase.logout();\r\n      dispatch({type: 'SIGNOUT_SUCCESS' });\r\n    });\r\n  }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n  return(dispatch, getState, firestore) =>{\r\n\r\n     firebase.auth().createUserWithEmailAndPassword(\r\n       newUser.email,\r\n       newUser.password\r\n     ).then((response) => {\r\n       return db.collection('users').doc(response.user.uid).set({\r\n         email: newUser.email,\r\n         firstname: newUser.firstname,\r\n         lastname: newUser.lastname,\r\n         initials: newUser.firstname[0] + newUser.lastname[0]\r\n       })\r\n     }).then(() => {\r\n       dispatch({type: 'SIGNUP_SUCCESS'});\r\n     }).catch(err =>{\r\n       dispatch({type: 'SIGNUP_ERROR', err})\r\n     })\r\n  }\r\n\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    );\r\n}\r\n \r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport Logo from '../images/yoshilogo.png'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Navbar = ({auth, profile}) => {\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return (\r\n       <nav className=\"nav-wrapper green darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo left\"><img className='hide-on-med-and-down' id=\"logo\" src={Logo} alt=\"Logo\" width=\"60px\" height=\"50px\"/>YoshiLand</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n const mapStateToProps = (state) =>{\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n }\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n       <div className=\"section\">\r\n           <div className=\"card z-depth-0\">\r\n               <div className=\"card-content\">\r\n                   <span className=\"card-title\">Notificacions</span>\r\n                   <ul className=\"notifications\">\r\n                       {notifications && notifications.map(item => {\r\n                           return (\r\n                               <li key={item.id}>\r\n                                   <span className=\"pink-text\">{item.user}</span>\r\n                                   <span> {item.content}</span>\r\n                                   <div className=\"grey-text note-date\">\r\n                                       {moment(item.time.toDate()).fromNow( )}\r\n                                   </div>\r\n                                   <hr/>\r\n                               </li>\r\n                           )\r\n                       })}\r\n                   </ul>\r\n               </div>\r\n           </div>\r\n       </div>\r\n        \r\n    );\r\n}\r\n \r\nexport default Notifications;","import React from 'react';\r\nimport bg from '../images/logo-yoshi.png'\r\nimport moment from 'moment'\r\nconst ProjectSummary = ({project}) => {\r\n    return ( \r\n        <div className=\"card ghostwhite project-summary\">\r\n        <div className=\"card-content green-text text-darken-3\">\r\n            <img id=\"bg\" alt='bg' src={bg}/> \r\n            <span className=\"card-title verdana\">{project.title.toUpperCase()}</span>\r\n            <p>{project.content}</p>\r\n            <hr/>\r\n            <p className=\"grey-text text-darken-3\"> Posted by {project.authorFirstName}{project.authorLastName}</p>\r\n            <p className=\"grey-text -text-lighten-3\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n        </div>\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n        {projects && projects.map(project => {\r\n            return(\r\n                <Link key={project.id} to={'/project/' + project.id}>\r\n                <ProjectSummary project={project} />\r\n                </Link>\r\n            )\r\n        })}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\nclass Dashboard extends Component {\r\n    render() { \r\n        const {projects, auth, notifications} = this.props\r\n            if(!auth.uid) return <Redirect to=\"/signin\" /> \r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n \r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n        {collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n        {collection: 'notifications', limit: 4, orderBy: ['time', 'desc']}\r\n    ])  \r\n)(Dashboard);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\"/>\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n            <div className=\"card\">\r\n                <div className=\"card-content\">\r\n                <span className=\"card-title green-text text-darken-2\">{project.title.toUpperCase()}</span>\r\n                    <p >{project.content}</p>\r\n                </div>\r\n                <div className=\"card-action rounded green lighten-1 grey-text text-darken-4\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )}\r\n    return ( \r\n       <p>Loading project...</p>\r\n     );\r\n}\r\n \r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id\r\n    const projects = state.firestore.data.projects\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect(props =>[\r\n        { collection: 'projects', doc: props.match.params.id }\r\n    ])\r\n)(ProjectDetails);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n      }\r\n   handleChange = (e) => {\r\n    this.setState({\r\n        [e.target.id]: e.target.value\r\n    })\r\n   }\r\n   handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() { \r\n        const { auth, authError } = this.props;\r\n        if(auth.uid) return <Redirect to=\"/\" />\r\n        return ( \r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5><hr/>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <div className=\"row\">\r\n                                <button id=\"sign\" className=\"btn pink lighten-1\">Login</button>\r\n                                <button id=\"cancel\" className=\"btn grey darken-1\">Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"red-text center\">\r\n                        { authError ? <p>{ authError }</p> : null }\r\n                        </div>\r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n const mapDispatchToProps = (dispatch) => {\r\n        return {\r\n            signIn: (creds) =>  dispatch(signIn(creds))\r\n        }\r\n }\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstname: '',\r\n        lastname: ''\r\n      }\r\n   handleChange = (e) => {\r\n    this.setState({\r\n        [e.target.id]: e.target.value\r\n    })\r\n   }\r\n    \r\n   handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n   \r\n    render() { \r\n        const { auth, authError } = this.props\r\n        if(auth.uid) return <Redirect to=\"/\" />\r\n        return ( \r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5><hr/>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"firstname\">First Name</label>\r\n                            <input type=\"text\" id=\"firstname\" onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"lastname\">Last Name</label>\r\n                            <input type=\"text\" id=\"lastname\" onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <div className=\"row\">\r\n                                <button id=\"sign\" className=\"btn pink lighten-1\">Sign Up</button>\r\n                                <button id=\"cancel\" className=\"btn grey darken-1\">Cancel</button>\r\n                            </div>\r\n                        <div className=\"red-text center\">\r\n                            { authError ? <p>{ authError }</p> : null }\r\n                        </div>\r\n                        </div>\r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp : (newUser) =>  dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect} from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n      }\r\n   handleChange = (e) => {\r\n    this.setState({\r\n        [e.target.id]: e.target.value\r\n    })\r\n\r\n   }\r\n    \r\n   handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createProject(this.state)\r\n        this.setState({\r\n            title: '', content: ''\r\n        });\r\n        this.props.history.push('/')\r\n    }\r\n   \r\n    render() { \r\n        const { auth } = this.props;\r\n        if(!auth.uid) return <Redirect to=\"/signin\" />\r\n        return ( \r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h4 className=\"grey-text text-darken-3\">Create new project</h4><hr/>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"title\">Project Title</label>\r\n                            <input type=\"text\" id=\"title\" required value={this.state.title} onChange={this.handleChange}/>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"content\">Project Content</label>\r\n                            <textarea name=\"content\" minLength='5' maxLength='50' required id=\"content\" \r\n                            value={this.state.content} \r\n                            className=\"materialize-textarea\"  \r\n                            onChange={this.handleChange}>  \r\n                            </textarea>\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                        <div className=\"row\">\r\n                                <button id=\"create\" className=\"btn pink lighten-1\">Create</button>\r\n                                <button id=\"cancel\" className=\"btn grey darken-1\">Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","    //THUNK\r\nexport const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // Make async call to Database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorID = getState().firebase.auth.uid;\r\n    firestore.collection('projects').add({\r\n        ...project,\r\n        authorFirstName: profile.firstname,\r\n        authorLastName: profile.lastname,\r\n        authorId: authorID,\r\n        createdAt: new Date()\r\n    }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project });\r\n    }).catch((err) => {\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err });\r\n        })\r\n   \r\n    }\r\n};\r\n\r\n\r\n","import React from 'react';\nimport 'materialize-css/dist/css/materialize.min.css'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const initState = {\r\n    authError: null \r\n}\r\n\r\nexport const authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('User logged in')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'LOGIN_ERROR':\r\n            console.log('User fail to log in')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            alert('User logged out');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Signup Success!');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('Signup Error!');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n        \r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: []\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            console.log('Created project: ', action.project)\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('Error at Creating project', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore';\nimport {ReactReduxFirebaseProvider,getFirebase} from 'react-redux-firebase';\nimport firebase from './config/fbConfig'\nimport { useSelector } from 'react-redux'\nimport { isLoaded } from 'react-redux-firebase'\n\nconst middleware = [\n  thunk.withExtraArgument({ getFirebase, getFirestore })\n]\n\nconst store = createStore(rootReducer,\n  compose(   \n    applyMiddleware(...middleware),  reduxFirestore(firebase)\n  )\n);\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n}\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n      return children\n}\n\nReactDOM.render(\n<Provider store={store}> \n  <ReactReduxFirebaseProvider {...rrfProps}> \n    <AuthIsLoaded>\n      <App /> \n    </AuthIsLoaded>\n  </ReactReduxFirebaseProvider>\n</Provider>, document.getElementById('root'));\n"],"sourceRoot":""}